/* Generated by Opal 0.7.0.dev */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $klass = $opal.klass;

  $opal.add_stubs(['$join', '$compact', '$split', '$each', '$==', '$pop', '$<<']);
  return (function($base, $super) {
    function $File(){};
    var self = $File = $klass($base, $super, 'File', $File);

    var def = self._proto, $scope = self._scope;

    $opal.cdecl($scope, 'SEPARATOR', "/");

    return ($opal.defs(self, '$expand_path', function(path, basedir) {
      var $a, $b, TMP_1, self = this, parts = nil, new_parts = nil;

      if (basedir == null) {
        basedir = nil
      }
      path = [basedir, path].$compact().$join($scope.SEPARATOR);
      parts = path.$split($scope.SEPARATOR);
      new_parts = [];
      ($a = ($b = parts).$each, $a._p = (TMP_1 = function(part){var self = TMP_1._s || this;
if (part == null) part = nil;
      if (part['$==']("..")) {
          return new_parts.$pop()
          } else {
          return new_parts['$<<'](part)
        }}, TMP_1._s = self, TMP_1), $a).call($b);
      return new_parts.$join($scope.SEPARATOR);
    }), nil) && 'expand_path';
  })(self, null)
})(Opal);

//# sourceMappingURL=/__opal_source_maps__/file.js.map
;
